<div class="build">
    <div class="build-holder">
        <h1 class="title">Check us out on our <b class="color">socials</b>!</h1>
        <h2 class="subtitle">Keep up to date on all service <b class="color">releases</b> and <b class="color">general announcements</b> via our social media.</h2>
       
    </div>
</div>

<script>
    class Hover3D 
  {
      constructor(id)
      {
          this.id = id;
          this.xOffset = 2;
          this.yOffset = 2;
          this.attack = 0.1;
          this.release = 0.5;
          this.perspective = 1000;
          this.create();
      }
  
      create()
      {
          document.querySelectorAll(this.id).forEach(element => 
          {
              const rectTransform = element.getBoundingClientRect();
              const perspective = "perspective(" + this.perspective + "px) ";
              element.style.setProperty("transform-style", "preserve-3d");
  
              element.addEventListener("mouseenter", e =>
              {
                  element.style.setProperty("transform " + this.attack + "s");
              })
  
              element.addEventListener("mousemove", e => 
              {
                  const rectTransform = element.getBoundingClientRect();
                  let dy = e.clientY - rectTransform.top;
                  let dx = e.clientX - rectTransform.left;
                  let xRot = this.map(dx, 0, rectTransform.width, -this.xOffset, this.xOffset);
                  let yRot = this.map(dy, 0, rectTransform.height, this.yOffset, -this.yOffset);
                  let propXRot = "rotateX(" + yRot + "deg) ";
                  let propYRot = "rotateY(" + xRot + "deg) scale(103%) translate(0, -5px)";
  
                  element.style.setProperty("transform", perspective + propXRot + propYRot);
              })
  
              element.addEventListener("mouseleave", e => 
              {
                  element.style.setProperty("translate", "transform " + this.release + "s");
                  element.style.setProperty("transform", perspective + "rotateX(0deg) rotateY(0deg)");
              })
          })
      }
      // Processing map() function
      map(value, istart, istop, ostart, ostop) 
      {
          return ostart + (ostop - ostart) * ((value - istart) / (istop - istart));
      }
  }
  
    let myHover3D = new Hover3D(".move"); // Yep! That's it.
  </script>

<script is:inline>
    document.addEventListener("DOMContentLoaded", async function () {

           fetch("json/donators.json")
           .then(response => response.json())
           .then(data => showService(data));

           function showService(data) {
            let donators = document.getElementById("donators");
            for(let i = 0; i < 2; i++){
            for(let i = 0; i < (data.donators.donator.length); i++) {
                donators.innerHTML += "<div style='top:20px; transform:translate(0, 0%); background-color:rgb(242,254,250); height:100px; width:450px; border-radius:16px; margin:15px; overflow:hidden; position:relative;'><h2 style='top:50%; transform:translate(0, -50%); text-align:center; left:20px; font-family:gilroy; position:relative;'>" + data.donators.donator[i].name + "</h2></div> </div></div>";
           }
        }
           }
    });
    
    </script>

<style>
    .build-holder{
        left:50%;
        transform: translate(-50%, 20px);
        width:100%;
        max-width:1500px;
        padding-top:30px;
        position:relative;
    }
    .build-square{
        width:95%;
        max-width:350px;
        box-shadow: 0px 5px 10px #00000020;
        border:2px solid rgb(255, 240, 240);
        border-radius: 16px;
        perspective: 500px;
        display:flex;
        flex-wrap: wrap;
        align-items: center;
        justify-content: center;
        gap:50px;
        padding:15px;
        min-height:500px;
        margin-bottom:50px;
        transition: 0.1s;
        z-index: 1;
        position: relative;
    }
    .slider::before{
		background: linear-gradient(to right,  rgba(255,255,255,1) 40%,rgba(255,255,255,0) 100%);
		content: "";
		height: 100%;
		position: absolute;
		width: 30%;
		z-index: 2;
	}
    .donator-holder{
        top:-30px;
        height: 100px;
        max-width:1480px;
        border-radius: 16px;
        overflow: hidden;
        position: relative;
    }
    .slider {
    top:-35px;
    height:150px;
	background: white;
	margin: auto;
    border-radius: 8px;
    z-index: 0;
	width: 1500px;
	overflow:hidden;
    position: absolute;
}
	
	.slider::after {
		right: 0;
		top: 0;
		transform: rotateZ(180deg);
	}

	.slider::before {
		left: 0;
		top: 0;
	}
	
	.slide-track {
		animation: scroll 80s linear infinite;
        display: flex;
		width: calc(450px * 20);
	}
    .build-square:hover{
        box-shadow: 0px 5px 15px #7d7d7d4b;
        border-width:4px;
        transition: 0.1s;
    }
    .bdg{
        top:20px;
        right:10px;
        border-radius: 8px;
        transform: translateZ(20px);
        scale:80%;
        font-size: 25px;
        position: absolute;
    }
    .tier-title{
        bottom:20px;
        font-family:Gilroy;
        position: absolute;
    }
    .tier-1{
        background-image: url(tier_1_bg.png);
        background-size: cover;
        border:2px solid rgb(228, 255, 169);
    }
    .tier-2{
        background-image: url(tier_2_bg.png);
        background-size: cover;
        border:2px solid rgb(148, 248, 255);
    }
    .tier-3{
        background-image: url(tier_3_bg.png);
        background-size: cover;
        border:2px solid rgb(238, 206, 252);
    }
    .tier-4{
        background-image: url(tier_4_bg.png);
        background-size: cover;
        border:2px solid rgb(205, 213, 204);
    }
    .tiers{
        left:50%;
        transform: translate(-50%, 0);
        display:flex;
        align-items: center;
        justify-content: center;
        flex-wrap:wrap;
        gap:20px;
        position:relative;
    }
    .dots{
        top:-80px;
        width:150px;
        height:150px;
        opacity:0.5;
        background-image:radial-gradient(#00000040 2px,transparent 2px);
        background-size: 15px 15px;
        z-index: 0;
        position:relative;
    }
    .build{
        top: 200px;
        position: relative;
    }
    .subtitle{
        text-align:center;
        margin-bottom:20px;
        font-size: 25px;
    }
    .color{
        background: url(img/header_bg.png) 0 0;
   -webkit-background-clip: text;
   -webkit-text-fill-color: transparent;
   filter:brightness(150%);
    }
    .title{
    text-align:center;
    width:100%;
   margin-bottom:15px;
    font-size: 50px;
    font-family: Gilroy;
    position: relative;
    }
</style>