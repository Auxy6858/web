---
import i18next, { t, changeLanguage } from "i18next";
import { localizePath } from "astro-i18next";
import { Trans } from "astro-i18next/components";
---

<head>
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <meta name="darkreader-lock" />
</head>

<div class="holder">
  <div class="left">
    <div class="polka-dot promotional-video"></div>
    <iframe
      width="100%"
      height="250"
      class="promotional-video"
      style="border-radius: 8px; margin-bottom: 8px; box-shadow:0px 0px 38px #ed5d234b; display:none; z-index: 1;"
      src="https://www.youtube.com/embed/i5c4ShKd704?controls=0"
      allow="autoplay;"></iframe>
    <img class="logo" src="/img/logo.png" alt="logo" width="150px" />
    <h2
      id="tagline"
      style="width:auto; margin-top:18px; font-weight:700;"
      data-bs-toggle="tooltip"
      data-bs-title="Tagline made by users like you!">
      Party on like it's 2006!
    </h2>
    <p style="font-size:20px; opacity:0.7;">
      {t("site.heroDesc")}
    </p>
    <br />
    <div class="line-container">
      <p style="opacity:0.5;">
        <i class="fa fa-circle-info" style="margin-right:5px;"></i>
        <a
          href="https://github.com/WiiLink24/WiiLink24-Patcher"
          style="text-decoration: none;"
          >WiiLink Patcher
          <l id="verno"></l></a
        > | {t("site.heroDev")}
        <a href="https://github.com/PablosCorner">PablosCorner</a>
      </p>
      <div class="horizontal-line"></div>
    </div>
    <div class="btn-container">
      <div class="btn-group" id="extra-btn">
        <button
          type="button"
          id="download-btn"
          onclick="downloadPatcher();"
          class="btn btn-primary btn-lg"
          style="text-align:left; color:white !important; margin-right:2px; font-size:18px;"
          ><img
            src="img/loading.gif"
            style="transform:translate(0, -2px); filter:brightness(1000);"
            width="20px"
          />
          {t("site.load")}</button
        >
        <button
          id="extra-btn-2"
          type="button"
          class="btn btn-primary btn-lg dropdown-toggle dropdown-toggle-split"
          style="color:white !important;"
          data-bs-toggle="dropdown"
          aria-expanded="false">
          <span class="visually-hidden">Toggle Dropdown</span>
        </button>
        <ul class="dropdown-menu dropdown-menu-end">
          <li>
            <a
              id="download-windows"
              class="dropdown-item"
              style="display:flex; align-items:center; justify-content:space-between;"
              href="#"
              ><div>
                <i class="fa-brands fa-microsoft" style="margin-right:5px;"></i>
                {t("site.downloadFor")} Windows
              </div>
              <p style="margin-bottom:0;">64bit</p></a
            >
          </li>
          <li>
            <div class="line-container">
              <p
                style="padding:0px 17px 0px 17px; margin-bottom:0; opacity:0.7;">
                <i class="fa-brands fa-apple" style="margin-right:5px;"></i>
                {t("site.downloadFor")} macOS
                <div
                  class="horizontal-line"
                  style="transform:translate(0, 0); opacity:0.5;">
                </div>
              </p>
            </div>
            <div
              style="margin-top: 5px; display:flex; flex-direction: row; gap: 8px; text-align: center;">
              <a class="dropdown-item" id="download-macos-arm">Apple Silicon</a>
              <a class="dropdown-item" id="download-macos-x64">64bit</a>
            </div>
          </li>
          <li>
            <div class="line-container">
              <p
                style="padding:0px 17px 0px 17px; margin-bottom:0; opacity:0.7;">
                <i class="fa fa-linux" style="margin-right:5px;"></i>
                {t("site.downloadFor")}
                Linux
                <div
                  class="horizontal-line"
                  style="transform:translate(0, 0); opacity:0.5;">
                </div>
              </p>
            </div>
            <div
              style="margin-top: 5px; display:flex; flex-direction: row; gap: 8px; text-align: center;">
              <a class="dropdown-item" id="download-linux-arm">ARM64</a>
              <a class="dropdown-item" id="download-linux-x64">64bit</a>
            </div>
          </li>
          <div class="line-container" style="gap: 8px; margin-top: 8px;">
            <p style="padding:0px 0px 0px 17px; margin-bottom:0; opacity:0.7;">
              {t("site.other")}
              <div
                class="horizontal-line"
                style="transform:translate(0, 0); opacity:0.5;">
              </div>
            </p>
          </div>
          <li>
            <a
              id="download-windows"
              class="dropdown-item"
              style="display:flex; align-items:center; justify-content:space-between;"
              href="https://github.com/riiconnect24/RiiConnect24-Patcher/releases"
              ><div style="transform:translate(-5px, 0);">
                <img
                  class="invert"
                  src="https://rc24.xyz/images/logo_small_white.png"
                  style="filter: invert(1);"
                  width="25px"
                />
                {t("site.legacyPatcher")}
              </div>
              <p style="margin-bottom:0;">
                64bit <i class="fa-brands fa-microsoft" style="margin-left:8px;"
                ></i>
              </p></a
            >
          </li>
          <li>
            <a
              class="dropdown-item"
              href="https://github.com/WiiLink24/WiiLink24-Patcher/releases/latest"
              ><i class="fa fa-book" style="margin-right:5px;"></i>
              {t("site.changelog")}</a
            >
          </li>
        </ul>
      </div>

      <button
        class="btn btn-outline-primary btn-lg"
        style="padding-top:11px; padding-bottom:11px; font-size:18px;"
        onclick="window.location.href = '/guide/install';">
        <i
          class="fa-solid fa-arrow-up fa-rotate-by"
          style="margin-right:5px; --fa-rotate-angle: 45deg;"></i>
        {t("site.installGuide")}
      </button>
    </div>
    <div class="form-check">
      <input
        class="form-check-input"
        type="checkbox"
        value=""
        id="flexCheckDefault"
      />
      <label class="form-check-label" for="flexCheckDefault">
        <Trans i18nKey="site.terms">
          I have read and accepted the <a href="/tos">terms of service</a> and the
          <a href="/privacy-policy">privacy policy</a>.
        </Trans>
      </label>
    </div>
  </div>

  <div class="right">
    <div class="holder-svc" id="hero-services">
      <img
        src="/img/loading.gif"
        style="top:50%; left:50%; filter:brightness(1000); transform:translate(-50%, -50%); position:absolute;"
        width="40px"
      />
    </div>
    <div class="bottom-cta">
      <div class="bar-holder">
        <div id="bar" class="bar"></div>
      </div>
      <a href="#intro" class="more">
        {t("site.heroMorePrompt")}
        <i class="fa-solid fa-chevron-right"></i>
      </a>
    </div>
  </div>

  <div id="withThe" style="display:none;">{t("site.withThe")}</div>
  <div id="downloadFor" style="display:none;">{t("site.downloadFor")}</div>
  <div id="downloadPrompt" style="display:none;">
    {t("site.downloadPrompt")}
  </div>

  <h1 id="fetcherHero" style="display:none;">
    json{localizePath("/hero.json")}
  </h1>

  <script is:inline>
    let assets = [];

    function downloadPatcher() {
      if (document.getElementById("flexCheckDefault").checked) {
        let userAgent = window.navigator.userAgent;
        let os = "Unknown OS";

        if (userAgent.indexOf("Win") != -1) os = "Windows";
        if (userAgent.indexOf("Mac") != -1) os = "MacOS";
        if (userAgent.indexOf("X11") != -1) os = "UNIX";
        if (userAgent.indexOf("Linux") != -1) os = "Linux";
        if (userAgent.indexOf("Wii") != -1) os = "Nintendo Wii";

        switch (os) {
          case "MacOS":
            window.location.href = assets[3].browser_download_url;
            break;
          case "Windows":
            window.location.href = assets[4].browser_download_url;
            break;
          case "Linux":
            window.location.href = assets[1].browser_download_url;
            break;
          default:
            window.location.href =
              "https://github.com/WiiLink24/WiiLink24-Patcher/releases";
            break;
        }
      } else {
        alert("Please accept the terms of service and the privacy policy.");
      }
    }
  </script>

  <script>
    let fetcher = document.getElementById("fetcherHero").innerHTML;

    function osdetect() {
      let userAgent = window.navigator.userAgent;
      let os = "Unknown OS";

      if (userAgent.indexOf("Win") != -1) os = "Windows";
      if (userAgent.indexOf("Mac") != -1) os = "MacOS";
      if (userAgent.indexOf("X11") != -1) os = "UNIX";
      if (userAgent.indexOf("Linux") != -1) os = "Linux";
      if (userAgent.indexOf("Wii") != -1) os = "Nintendo Wii";

      return os;
    }

    function updateButtons() {
      var checkbox = document.getElementById("flexCheckDefault");
      if (checkbox.checked) {
        document.getElementById("download-btn").classList.remove("disabled");
        document.getElementById("extra-btn").classList.remove("disabled");
        document.getElementById("extra-btn-2").classList.remove("disabled");
        document.getElementById("download-btn").style.transition = "0.2s";
        document.getElementById("extra-btn").style.transition = "0.2s";
        document.getElementById("extra-btn-2").style.transition = "0.2s";
      } else {
        document.getElementById("download-btn").classList.add("disabled");
        document.getElementById("extra-btn").classList.add("disabled");
        document.getElementById("extra-btn-2").classList.add("disabled");
      }
    }

    function updateTagline() {
      let tagline = document.getElementById("tagline");
      fetch(fetcher)
        .then(res => res.json())
        .then(data => {
          let taglines = data.taglines;
          tagline.innerHTML =
            taglines[Math.floor(Math.random() * taglines.length)];
        });
    }

    window.onload = function () {
      let downloadFor = document.getElementById("downloadFor").innerHTML;
      let downloadPrompt = document.getElementById("downloadPrompt").innerHTML;
      updateButtons();
      switch (osdetect()) {
        case "MacOS":
          document.getElementById("download-btn").innerHTML =
            "<i class='fa-brands fa-apple' style='font-size:20px; margin-right:5px;'></i> " +
            downloadFor +
            " macOS";
          break;
        case "Windows":
          document.getElementById("download-btn").innerHTML =
            "<i class='fa-brands fa-microsoft' style='font-size:20px; margin-right:5px;'></i> " +
            downloadFor +
            " Windows";
          break;
        case "Linux":
          document.getElementById("download-btn").innerHTML =
            "<i class='fa-brands fa-linux' style='font-size:20px; margin-right:5px;'></i> " +
            downloadFor +
            " Linux";
          break;
        case "Nintendo Wii":
          location.href = "/wii";
          break;
        default:
          document.getElementById("download-btn").innerHTML =
            "<i class='fa fa-download' style='margin-right:5px;'></i> " +
            downloadPrompt +
            "";
          break;
      }
      updateTagline();
    };

    document
      .getElementById("flexCheckDefault")
      .addEventListener("change", updateButtons);

    function updateHero() {
      fetch(fetcher)
        .then(res => res.json())
        .then(data => {
          let services = data.hero.element;
          function shuffle(array) {
            let currentIndex = array.length,
              temporaryValue,
              randomIndex;

            // While there remain elements to shuffle...
            while (0 !== currentIndex) {
              // Pick a remaining element...
              randomIndex = Math.floor(Math.random() * currentIndex);
              currentIndex -= 1;

              // And swap it with the current element.
              temporaryValue = array[currentIndex];
              array[currentIndex] = array[randomIndex];
              array[randomIndex] = temporaryValue;
            }

            return array;
          }

          services = shuffle(services);
          let randomServices = services.slice(0, 3);
          let withThe = document.getElementById("withThe").innerHTML;
          let html = "";
          randomServices.forEach((service, index) => {
            html += `
            <div class="element" style="display:flex; flex-direction:row; align-items:center; gap:20px; width:100%; padding:20px; border-radius:8px; overflow:hidden; position:relative; animation-name: fadeup; animation-duration: 1s; animation-fill-mode: both; animation-delay: ${index * 0.2}s;">
              <img src="/img/${service.icon}" style="height:70px; z-index: 1; position:relative;" alt="${service.name}" />
              <div style="z-index: 1; position:relative;">
                <h4 style="display: -webkit-box; -webkit-line-clamp: 2; -webkit-box-orient: vertical; overflow: hidden; text-overflow: ellipsis;">${service.desc}</h4>
                <p style="opacity:0.7; margin-bottom:0 !important;">${withThe}
                <a href="${service.link}">${service.name}</a>
                </p>
              </div>
              <div style="transform:scale(1.1); height: 100%; width: 100%; overflow: hidden; position: absolute;">
                <img src="/img/${service.bg}" class="webkit-hide" style="filter:blur(8px); opacity:0.3; height:200px; width:500px; -webkit-mask-image: linear-gradient(to left, transparent 25%, black 75%); mask-image: linear-gradient(to left, transparent 25%, black 75%); z-index:0; position:absolute;" alt="${service.name}" />
              </div>
            </div>
          `;
          });
          document.getElementById("hero-services").innerHTML = html;

          const bar = document.getElementById("bar");
          bar.style.animation = "none";
          void bar.offsetWidth;
          bar.style.animation = "bar 10s linear forwards";
          setTimeout(() => {
            document
              .querySelectorAll(".element")
              .forEach(el => el.classList.add("fadeOut"));
          }, 9500);
        });
    }

    import { Octokit } from "https://esm.sh/octokit";

    document.addEventListener("DOMContentLoaded", async function () {
      updateHero();
      setInterval(updateHero, 10000);
      const octokit = new Octokit({
        auth: ""
      });

      const owner = "WiiLink24";
      const repo = "WiiLink24-Patcher";

      try {
        const { data: release } = await octokit.request(
          "GET /repos/{owner}/{repo}/releases/latest",
          {
            owner,
            repo,
            headers: {
              "X-GitHub-Api-Version": "2022-11-28"
            }
          }
        );

        if (release) {
          assets = release.assets;

          if (assets) {
            let versionNumber = release.tag_name;
            document.getElementById("verno").innerHTML = `${versionNumber}`;
            document.getElementById("download-windows").href =
              assets[4]?.browser_download_url;
            document.getElementById("download-macos-arm").href =
              assets[2]?.browser_download_url;
            document.getElementById("download-macos-x64").href =
              assets[3]?.browser_download_url;
            document.getElementById("download-linux-arm").href =
              assets[0]?.browser_download_url;
            document.getElementById("download-linux-x64").href =
              assets[1]?.browser_download_url;
          }
        }
      } catch (error) {
        console.error("Error fetching GitHub release:", error);
      }
    });
  </script>

  <style>
    .holder {
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      display: flex;
      gap: 30px;
      justify-content: space-between;
      align-items: center;
      position: relative;
    }

    .left {
      width: 100%;
      max-width: 650px;
      display: flex;
      flex-direction: column;
      opacity: 0;
      animation: fadeup 500ms 0.5s ease forwards;
    }

    .logo {
      filter: invert(1);
    }

    html.dark .logo {
      filter: invert(0);
    }

    .btn-container {
      display: grid;
      grid-template-columns: 4fr 2fr;
      gap: 10px;
    }

    .btn-group {
      display: grid;
      grid-template-columns: 8fr 1fr;
    }

    .btn-outline-primary:hover {
      color: white !important;
    }

    .form-check {
      margin-top: 15px;
    }

    li {
      padding: 5px;
      border-radius: 8px;
    }

    .polka-dot {
      width: 240px;
      height: 240px;
      background-image: radial-gradient(var(--color) 10%, transparent 11%),
        radial-gradient(var(--color) 10%, transparent 11%);
      background-size: 30px 30px;
      background-position:
        0 0,
        30px 30px;
      opacity: 0.3;
      left: -30px;
      top: -30px;
      background-repeat: repeat;
      animation: rotate 240s linear infinite;
      display: none;
      position: absolute;
      z-index: 0;
    }

    .dropdown-menu {
      width: 100%;
      padding: 8px !important;
      background-color: var(--bg-color-secondary);
      border-radius: 8px;
    }

    .dropdown-item {
      padding-top: 8px;
      padding-bottom: 8px;
      background-color: var(--bg-color-tertiary);
      border-radius: 4px;
    }

    .disabled {
      opacity: 0.5;
      cursor: not-allowed !important;
      transition: 0.2s;
    }

    .bottom-cta {
      max-width: 600px;
      display: flex;
      align-items: center;
      justify-content: space-between;
      gap: 30px;
      margin-top: 30px;
      cursor: pointer;
      transition: 0.2s;
    }

    .holder-svc {
      max-width: 600px;
      height: 500px;
      display: grid;
      grid-template-rows: 1fr 1fr 1fr;
      gap: 30px;
      position: relative;
    }

    .more {
      opacity: 0.7;
      transform: translate(0, -5px);
      font-size: 20px;
      text-align: right;
      text-decoration: none;
      transition: 0.2s;
    }

    .more:hover {
      opacity: 1;
      transition: 0.2s;
    }

    .more i {
      transition: 0.2s;
    }

    .more:hover i {
      transform: translate(5px, 0);
      transition: 0.2s;
    }

    .bar-holder {
      width: 150px;
      height: 10px;
      transform: translate(0, -5px);
      border-radius: 80px;
      background-color: var(--bg-opaque-1);
    }

    .bar {
      width: 50%;
      height: 100%;
      background-color: var(--bg-opaque-2);
      border-radius: 80px;
      animation: bar 1s infinite;
      overflow: hidden;
    }

    .line-container {
      display: flex;
      align-items: center;
    }

    .line-container .horizontal-line {
      flex-grow: 1;
      height: 1px;
      background-color: var(--color);
      opacity: 0.5;
      margin-left: 10px;
      transform: translate(0, -5px);
    }

    @keyframes fadeup {
      from {
        opacity: 0;
        transform: translateY(30px);
      }
      to {
        opacity: 1;
        transform: translateY(0);
      }
    }

    @media only screen and (max-width: 1000px) {
      .right {
        display: none;
      }
      .logo {
        display: none;
      }
      .left {
        left: 50%;
        transform: translate(-50%, 0) !important;
        position: relative;
      }
      .promotional-video {
        display: block !important;
      }
      .btn-container {
        display: flex;
        flex-direction: column;
      }
    }
  </style>

  <style is:global>
    @keyframes bar {
      0% {
        width: 0%;
      }
      100% {
        width: 100%;
      }
    }

    @keyframes fadeOut {
      from {
        opacity: 1;
      }
      to {
        opacity: 0;
      }
    }

    .element.fadeOut {
      animation-name: fadeOut !important;
      animation-duration: 0.5s !important;
      animation-fill-mode: both !important;
    }

    @supports (font: -apple-system-body) and (-webkit-appearance: none) {
      .webkit-hide {
        display: none;
      }
      .element {
        background-color: var(--bg-color-tertiary);
      }
    }
  </style>
</div>
